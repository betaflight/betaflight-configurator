# Builds Betaflight Configurator on Windows, Android, Linux and macOS platforms.
#
# After building, artifacts are released to a separate repository.

name: CI

on:
  workflow_call:
    inputs:
      debug_build:
        description: 'Specifies if it is a debug build or a release build'
        default: true
        required: false
        type: boolean

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules/
          key: node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - run: yarn install --immutable --immutable-cache --check-cache

      - name: Run unit tests
        run: yarn test

  build:
    name: Build (${{ matrix.name }})
    needs: test
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Android
            os: ubuntu-latest
            releaseArgs: --android

          - name: Linux
            os: ubuntu-latest
            releaseArgs: --linux64

          - name: macOS
            os: macos-11
            releaseArgs: --osx64

          - name: Windows
            os: windows-2022
            releaseArgs: --win64
    steps:
      - uses: actions/checkout@v4

      - name: Cache NW.js
        uses: actions/cache@v4
        with:
          path: cache/
          key: nwjs-${{ inputs.debug_build && 'debug' || 'release' }}-${{ runner.os }}

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules/
          key: node_modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install macos dependencies
        run: |
          sudo -H pip install setuptools packaging
          sudo npm install -g yarn@1.22.0 node-gyp@10 macos-alias
          yarn --network-timeout 1000000
        if: ${{ matrix.name == 'macOs' }}

      - name: Install Java JDK 8
        uses: actions/setup-java@v4
        if: ${{ matrix.name == 'Android' }}
        with:
          distribution: temurin
          java-version: '8'

      - run: yarn install --immutable --immutable-cache --check-cache

      - run: yarn version --no-git-tag-version --new-version ${{ github.ref_name }}
        if: ${{ !inputs.debug_build }}

      - run: yarn gulp release ${{ matrix.releaseArgs }}
        if: ${{ !inputs.debug_build && matrix.name != 'Android' }}

      - run: yarn gulp debug-release ${{ matrix.releaseArgs }}
        if: ${{ inputs.debug_build || matrix.name == 'Android' }}

      - name: Publish build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Betaflight-Configurator${{ inputs.debug_build == 'true' && '-Debug' || '' }}-${{ matrix.name }}
          path: release/
          retention-days: 90
