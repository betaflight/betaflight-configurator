name: CI

# Run on PRs to show artifacts, and keep callable for reuse.
on:
  pull_request:
  push:
    branches: [ tauri ]
  workflow_call:
    inputs:
      run_docker_build:
        description: 'Also try a Docker build if a Dockerfile exists'
        required: false
        default: false
        type: boolean

jobs:
  node-ci:
    name: Lint, test, and build (Node)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies (Yarn classic)
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test --run

      - name: Build web (Vite)
        run: yarn build

      - name: Upload web dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist/
          if-no-files-found: warn
          retention-days: 14

  docker-build:
    name: Docker build (optional)
    runs-on: ubuntu-latest
    needs: node-ci
    # Only run when called as a reusable workflow AND the caller enabled it
    if: ${{ github.event_name == 'workflow_call' && inputs.run_docker_build == true }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check for Dockerfile
        id: chk
        shell: bash
        run: |
          if [[ -f Dockerfile ]]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build container image
        if: ${{ steps.chk.outputs.present == 'true' }}
        run: |
          docker build -t betaflight-configurator:ci .
      - name: Export container (tar)
        if: ${{ steps.chk.outputs.present == 'true' }}
        run: |
          docker save betaflight-configurator:ci -o image.tar
      - name: Upload image
        uses: actions/upload-artifact@v4
        if: ${{ steps.chk.outputs.present == 'true' }}
        with:
          name: docker-image
          path: image.tar
          retention-days: 7
